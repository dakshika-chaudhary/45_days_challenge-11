"PRODUCT ARRAY PUZZLE"
code:
class Solution {
  public:
    // nums: given vector
    // return the Product vector P that hold product except self at each index
    vector<long long int> productExceptSelf(vector<long long int>& nums) {

       int n=nums.size();

        long long int preproduct=1;
        long long int postproduct=1;
        
        
        vector<long long int>resultpre(n,1);
        vector<long long int>resultpost(n,1);
        
        for(int i=0;i<n;i++){
           resultpre[i]=preproduct;
           preproduct=preproduct*nums[i];
        }
        
        for(int i=n-1;i>=0;i--){
           resultpost[i]=postproduct;
           postproduct=postproduct*nums[i];
        }
        
        vector<long long int>ans(n,1);
        for(int i=0;i<n;i++){
            ans[i]=resultpre[i]*resultpost[i];
        }
        
        return ans;
        
        
    }
};

"LONGEST PALLINDROM"
code:
class Solution {
public:
    string longestCommonPrefix(vector<string>& strs) {
        int n=strs.size();
        
        if(n==1){return strs[0];}
        
        sort(strs.begin(),strs.end());
        
        string first=strs[0];
        string last=strs[n-1];
        
        string s;
        
        for(int i=0;i<min(first.size(),last.size());i++){
            if(first[i]==last[i]){s+=first[i];}
            else{return s;}
        }
        return s;
        
    }
};
