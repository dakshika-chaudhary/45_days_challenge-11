442. Find All Duplicates in an Array
code:
class Solution {
public:
    vector<int> findDuplicates(vector<int>& nums) {
        vector<int>v;
      unordered_map<int,int>mp;
        for(int i=0;i<nums.size();i++){
            mp[nums[i]]++;
            if(mp[nums[i]]>1){
                v.push_back(nums[i]);
            }
        }
        return v;
    }
};

112. Path Sum
code:
class Solution {
public:
    bool hasPathSum(TreeNode* root, int targetSum) {
      if(root==NULL){return false;}
        if(root->left==NULL && root->right==NULL){
            return (root->val==targetSum);
        }
        bool ans=false;
        if(root->left!=NULL){ans=hasPathSum(root->left,targetSum-root->val);}
        if(root->right!=NULL){ans=ans||hasPathSum(root->right,targetSum-root->val);}
     
        return ans;
    }
};
